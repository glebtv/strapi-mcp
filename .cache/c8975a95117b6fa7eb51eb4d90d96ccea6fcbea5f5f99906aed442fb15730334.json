{
  "url": "https://docs.anthropic.com/en/docs/claude-code/settings",
  "markdown": "# Claude Code settings - Anthropic\n[Anthropic home page![light logo](https://mintlify.s3.us-west-1.amazonaws.com/anthropic/logo/light.svg)![dark logo](https://mintlify.s3.us-west-1.amazonaws.com/anthropic/logo/dark.svg)](https://docs.anthropic.com/)\nEnglish\nSearch...\n-   [Research](https://www.anthropic.com/research)\n-   [Login](https://console.anthropic.com/login)\n-   [Support](https://support.anthropic.com/)\n-   [Sign up](https://console.anthropic.com/login)\n-   [\n    Sign up\n    ](https://console.anthropic.com/login)\nSearch...\nNavigation\nConfiguration\nClaude Code settings\n[Welcome\n](https://docs.anthropic.com/en/home)[Developer Platform\n](https://docs.anthropic.com/en/docs/intro)[Claude Code\n](https://docs.anthropic.com/en/docs/claude-code/overview)[Model Context Protocol (MCP)\n](https://docs.anthropic.com/en/docs/mcp)[API Reference\n](https://docs.anthropic.com/en/api/messages)[Resources\n](https://docs.anthropic.com/en/resources/overview)[Release Notes\n](https://docs.anthropic.com/en/release-notes/overview)\n##### Getting started\n-   [\n    Overview\n    ](https://docs.anthropic.com/en/docs/claude-code/overview)\n-   [\n    Quickstart\n    ](https://docs.anthropic.com/en/docs/claude-code/quickstart)\n-   [\n    Common workflows\n    ](https://docs.anthropic.com/en/docs/claude-code/common-workflows)\n##### Build with Claude Code\n-   [\n    Claude Code SDK\n    ](https://docs.anthropic.com/en/docs/claude-code/sdk)\n-   [\n    Sub agents\n    ](https://docs.anthropic.com/en/docs/claude-code/sub-agents)\n-   [\n    Claude Code hooks\n    ](https://docs.anthropic.com/en/docs/claude-code/hooks-guide)\n-   [\n    GitHub Actions\n    ](https://docs.anthropic.com/en/docs/claude-code/github-actions)\n-   [\n    Model Context Protocol (MCP)\n    ](https://docs.anthropic.com/en/docs/claude-code/mcp)\n-   [\n    Troubleshooting\n    ](https://docs.anthropic.com/en/docs/claude-code/troubleshooting)\n##### Deployment\n-   [\n    Overview\n    ](https://docs.anthropic.com/en/docs/claude-code/third-party-integrations)\n-   [\n    Amazon Bedrock\n    ](https://docs.anthropic.com/en/docs/claude-code/amazon-bedrock)\n-   [\n    Google Vertex AI\n    ](https://docs.anthropic.com/en/docs/claude-code/google-vertex-ai)\n-   [\n    Corporate proxy\n    ](https://docs.anthropic.com/en/docs/claude-code/corporate-proxy)\n-   [\n    LLM gateway\n    ](https://docs.anthropic.com/en/docs/claude-code/llm-gateway)\n-   [\n    Development containers\n    ](https://docs.anthropic.com/en/docs/claude-code/devcontainer)\n##### Administration\n-   [\n    Advanced installation\n    ](https://docs.anthropic.com/en/docs/claude-code/setup)\n-   [\n    Identity and Access Management\n    ](https://docs.anthropic.com/en/docs/claude-code/iam)\n-   [\n    Security\n    ](https://docs.anthropic.com/en/docs/claude-code/security)\n-   [\n    Monitoring\n    ](https://docs.anthropic.com/en/docs/claude-code/monitoring-usage)\n-   [\n    Costs\n    ](https://docs.anthropic.com/en/docs/claude-code/costs)\n-   [\n    Analytics\n    ](https://docs.anthropic.com/en/docs/claude-code/analytics)\n##### Configuration\n-   [\n    Settings\n    ](https://docs.anthropic.com/en/docs/claude-code/settings)\n-   [\n    Add Claude Code to your IDE\n    ](https://docs.anthropic.com/en/docs/claude-code/ide-integrations)\n-   [\n    Terminal configuration\n    ](https://docs.anthropic.com/en/docs/claude-code/terminal-config)\n-   [\n    Memory management\n    ](https://docs.anthropic.com/en/docs/claude-code/memory)\n##### Reference\n-   [\n    CLI reference\n    ](https://docs.anthropic.com/en/docs/claude-code/cli-reference)\n-   [\n    Interactive mode\n    ](https://docs.anthropic.com/en/docs/claude-code/interactive-mode)\n-   [\n    Slash commands\n    ](https://docs.anthropic.com/en/docs/claude-code/slash-commands)\n-   [\n    Hooks reference\n    ](https://docs.anthropic.com/en/docs/claude-code/hooks)\n##### Resources\n-   [\n    Data usage\n    ](https://docs.anthropic.com/en/docs/claude-code/data-usage)\n-   [\n    Legal and compliance\n    ](https://docs.anthropic.com/en/docs/claude-code/legal-and-compliance)\nConfiguration\n# Claude Code settings\nCopy page\nConfigure Claude Code with global and project-level settings, and environment variables.\nClaude Code offers a variety of settings to configure its behavior to meet your needs. You can configure Claude Code by running the `/config` command when using the interactive REPL.\n##\n[​\n](#settings-files)\nSettings files\nThe `settings.json` file is our official mechanism for configuring Claude Code through hierarchical settings:\n-   **User settings** are defined in `~/.claude/settings.json` and apply to all projects.\n-   **Project settings** are saved in your project directory:\n    -   `.claude/settings.json` for settings that are checked into source control and shared with your team\n    -   `.claude/settings.local.json` for settings that are not checked in, useful for personal preferences and experimentation. Claude Code will configure git to ignore `.claude/settings.local.json` when it is created.\n-   For enterprise deployments of Claude Code, we also support **enterprise managed policy settings**. These take precedence over user and project settings. System administrators can deploy policies to:\n    -   macOS: `/Library/Application Support/ClaudeCode/managed-settings.json`\n    -   Linux and WSL: `/etc/claude-code/managed-settings.json`\n    -   Windows: `C:\\ProgramData\\ClaudeCode\\managed-settings.json`\nExample settings.json\n```JSON\n{\n  \"permissions\": {\n    \"allow\": [\n      \"Bash(npm run lint)\",\n      \"Bash(npm run test:*)\",\n      \"Read(~/.zshrc)\"\n    ],\n    \"deny\": [\n      \"Bash(curl:*)\"\n    ]\n  },\n  \"env\": {\n    \"CLAUDE_CODE_ENABLE_TELEMETRY\": \"1\",\n    \"OTEL_METRICS_EXPORTER\": \"otlp\"\n  }\n}\n```\n###\n[​\n](#available-settings)\nAvailable settings\n`settings.json` supports a number of options:\n| Key | Description | Example |\n| --- | --- | --- |\n| `apiKeyHelper` | Custom script, to be executed in `/bin/sh`, to generate an auth value. This value will be sent as `X-Api-Key` and `Authorization: Bearer` headers for model requests | `/bin/generate_temp_api_key.sh` |\n| `cleanupPeriodDays` | How long to locally retain chat transcripts (default: 30 days) | `20` |\n| `env` | Environment variables that will be applied to every session | `{\"FOO\": \"bar\"}` |\n| `includeCoAuthoredBy` | Whether to include the `co-authored-by Claude` byline in git commits and pull requests (default: `true`) | `false` |\n| `permissions` | See table below for structure of permissions. |  |\n| `hooks` | Configure custom commands to run before or after tool executions. See [hooks documentation](https://docs.anthropic.com/en/docs/claude-code/hooks) | `{\"PreToolUse\": {\"Bash\": \"echo 'Running command...'\"}}` |\n| `model` | Override the default model to use for Claude Code | `\"claude-3-5-sonnet-20241022\"` |\n| `forceLoginMethod` | Use `claudeai` to restrict login to Claude.ai accounts, `console` to restrict login to Anthropic Console (API usage billing) accounts | `claudeai` |\n| `enableAllProjectMcpServers` | Automatically approve all MCP servers defined in project `.mcp.json` files | `true` |\n| `enabledMcpjsonServers` | List of specific MCP servers from `.mcp.json` files to approve | `[\"memory\", \"github\"]` |\n| `disabledMcpjsonServers` | List of specific MCP servers from `.mcp.json` files to reject | `[\"filesystem\"]` |\n| `awsAuthRefresh` | Custom script that modifies the `.aws` directory (see [advanced credential configuration](https://docs.anthropic.com/en/docs/claude-code/amazon-bedrock#advanced-credential-configuration)) | `aws sso login --profile myprofile` |\n| `awsCredentialExport` | Custom script that outputs JSON with AWS credentials (see [advanced credential configuration](https://docs.anthropic.com/en/docs/claude-code/amazon-bedrock#advanced-credential-configuration)) | `/bin/generate_aws_grant.sh` |\n###\n[​\n](#permission-settings)\nPermission settings\n| Keys | Description | Example |\n| --- | --- | --- |\n| `allow` | Array of [permission rules](https://docs.anthropic.com/en/docs/claude-code/iam#configuring-permissions) to allow tool use | `[ \"Bash(git diff:*)\" ]` |\n| `deny` | Array of [permission rules](https://docs.anthropic.com/en/docs/claude-code/iam#configuring-permissions) to deny tool use | `[ \"WebFetch\", \"Bash(curl:*)\" ]` |\n| `additionalDirectories` | Additional [working directories](https://docs.anthropic.com/en/docs/claude-code/iam#working-directories) that Claude has access to | `[ \"../docs/\" ]` |\n| `defaultMode` | Default [permission mode](https://docs.anthropic.com/en/docs/claude-code/iam#permission-modes) when opening Claude Code | `\"acceptEdits\"` |\n| `disableBypassPermissionsMode` | Set to `\"disable\"` to prevent `bypassPermissions` mode from being activated. See [managed policy settings](https://docs.anthropic.com/en/docs/claude-code/iam#enterprise-managed-policy-settings) | `\"disable\"` |\n###\n[​\n](#settings-precedence)\nSettings precedence\nSettings are applied in order of precedence:\n1.  Enterprise policies (see [IAM documentation](https://docs.anthropic.com/en/docs/claude-code/iam#enterprise-managed-policy-settings))\n2.  Command line arguments\n3.  Local project settings\n4.  Shared project settings\n5.  User settings\n##\n[​\n](#sub-agent-configuration)\nSub agent configuration\nClaude Code supports custom AI sub agents that can be configured at both user and project levels. These sub agents are stored as Markdown files with YAML frontmatter:\n-   **User sub agents**: `~/.claude/agents/` - Available across all your projects\n-   **Project sub agents**: `.claude/agents/` - Specific to your project and can be shared with your team\nSub agent files define specialized AI assistants with custom prompts and tool permissions. Learn more about creating and using sub agents in the [sub agents documentation](https://docs.anthropic.com/en/docs/claude-code/sub-agents).\n##\n[​\n](#environment-variables)\nEnvironment variables\nClaude Code supports the following environment variables to control its behavior:\nAll environment variables can also be configured in [`settings.json`](https://docs.anthropic.com/_sites/docs.anthropic.com/en/docs/claude-code/settings#available-settings). This is useful as a way to automatically set environment variables for each session, or to roll out a set of environment variables for your whole team or organization.\n| Variable | Purpose |\n| --- | --- |\n| `ANTHROPIC_API_KEY` | API key sent as `X-Api-Key` header, typically for the Claude SDK (for interactive usage, run `/login`) |\n| `ANTHROPIC_AUTH_TOKEN` | Custom value for the `Authorization` header (the value you set here will be prefixed with `Bearer` ) |\n| `ANTHROPIC_CUSTOM_HEADERS` | Custom headers you want to add to the request (in `Name: Value` format) |\n| `ANTHROPIC_MODEL` | Name of custom model to use (see [Model Configuration](https://docs.anthropic.com/en/docs/claude-code/bedrock-vertex-proxies#model-configuration)) |\n| `ANTHROPIC_SMALL_FAST_MODEL` | Name of [Haiku-class model for background tasks](https://docs.anthropic.com/en/docs/claude-code/costs) |\n| `ANTHROPIC_SMALL_FAST_MODEL_AWS_REGION` | Override AWS region for the small/fast model when using Bedrock |\n| `AWS_BEARER_TOKEN_BEDROCK` | Bedrock API key for authentication (see [Bedrock API keys](https://aws.amazon.com/blogs/machine-learning/accelerate-ai-development-with-amazon-bedrock-api-keys/)) |\n| `BASH_DEFAULT_TIMEOUT_MS` | Default timeout for long-running bash commands |\n| `BASH_MAX_TIMEOUT_MS` | Maximum timeout the model can set for long-running bash commands |\n| `BASH_MAX_OUTPUT_LENGTH` | Maximum number of characters in bash outputs before they are middle-truncated |\n| `CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR` | Return to the original working directory after each Bash command |\n| `CLAUDE_CODE_API_KEY_HELPER_TTL_MS` | Interval in milliseconds at which credentials should be refreshed (when using `apiKeyHelper`) |\n| `CLAUDE_CODE_IDE_SKIP_AUTO_INSTALL` | Skip auto-installation of IDE extensions |\n| `CLAUDE_CODE_MAX_OUTPUT_TOKENS` | Set the maximum number of output tokens for most requests |\n| `CLAUDE_CODE_USE_BEDROCK` | Use [Bedrock](https://docs.anthropic.com/en/docs/claude-code/amazon-bedrock) |\n| `CLAUDE_CODE_USE_VERTEX` | Use [Vertex](https://docs.anthropic.com/en/docs/claude-code/google-vertex-ai) |\n| `CLAUDE_CODE_SKIP_BEDROCK_AUTH` | Skip AWS authentication for Bedrock (e.g. when using an LLM gateway) |\n| `CLAUDE_CODE_SKIP_VERTEX_AUTH` | Skip Google authentication for Vertex (e.g. when using an LLM gateway) |\n| `CLAUDE_CODE_DISABLE_NONESSENTIAL_TRAFFIC` | Equivalent of setting `DISABLE_AUTOUPDATER`, `DISABLE_BUG_COMMAND`, `DISABLE_ERROR_REPORTING`, and `DISABLE_TELEMETRY` |\n| `CLAUDE_CODE_DISABLE_TERMINAL_TITLE` | Set to `1` to disable automatic terminal title updates based on conversation context |\n| `DISABLE_AUTOUPDATER` | Set to `1` to disable automatic updates. This takes precedence over the `autoUpdates` configuration setting. |\n| `DISABLE_BUG_COMMAND` | Set to `1` to disable the `/bug` command |\n| `DISABLE_COST_WARNINGS` | Set to `1` to disable cost warning messages |\n| `DISABLE_ERROR_REPORTING` | Set to `1` to opt out of Sentry error reporting |\n| `DISABLE_NON_ESSENTIAL_MODEL_CALLS` | Set to `1` to disable model calls for non-critical paths like flavor text |\n| `DISABLE_TELEMETRY` | Set to `1` to opt out of Statsig telemetry (note that Statsig events do not include user data like code, file paths, or bash commands) |\n| `HTTP_PROXY` | Specify HTTP proxy server for network connections |\n| `HTTPS_PROXY` | Specify HTTPS proxy server for network connections |\n| `MAX_THINKING_TOKENS` | Force a thinking for the model budget |\n| `MCP_TIMEOUT` | Timeout in milliseconds for MCP server startup |\n| `MCP_TOOL_TIMEOUT` | Timeout in milliseconds for MCP tool execution |\n| `MAX_MCP_OUTPUT_TOKENS` | Maximum number of tokens allowed in MCP tool responses (default: 25000) |\n| `VERTEX_REGION_CLAUDE_3_5_HAIKU` | Override region for Claude 3.5 Haiku when using Vertex AI |\n| `VERTEX_REGION_CLAUDE_3_5_SONNET` | Override region for Claude 3.5 Sonnet when using Vertex AI |\n| `VERTEX_REGION_CLAUDE_3_7_SONNET` | Override region for Claude 3.7 Sonnet when using Vertex AI |\n| `VERTEX_REGION_CLAUDE_4_0_OPUS` | Override region for Claude 4.0 Opus when using Vertex AI |\n| `VERTEX_REGION_CLAUDE_4_0_SONNET` | Override region for Claude 4.0 Sonnet when using Vertex AI |\n##\n[​\n](#configuration-options)\nConfiguration options\nTo manage your configurations, use the following commands:\n-   List settings: `claude config list`\n-   See a setting: `claude config get <key>`\n-   Change a setting: `claude config set <key> <value>`\n-   Push to a setting (for lists): `claude config add <key> <value>`\n-   Remove from a setting (for lists): `claude config remove <key> <value>`\nBy default `config` changes your project configuration. To manage your global configuration, use the `--global` (or `-g`) flag.\n###\n[​\n](#global-configuration)\nGlobal configuration\nTo set a global configuration, use `claude config set -g <key> <value>`:\n| Key | Description | Example |\n| --- | --- | --- |\n| `autoUpdates` | Whether to enable automatic updates (default: `true`). When enabled, Claude Code automatically downloads and installs updates in the background. Updates are applied when you restart Claude Code. | `false` |\n| `preferredNotifChannel` | Where you want to receive notifications (default: `iterm2`) | `iterm2`, `iterm2_with_bell`, `terminal_bell`, or `notifications_disabled` |\n| `theme` | Color theme | `dark`, `light`, `light-daltonized`, or `dark-daltonized` |\n| `verbose` | Whether to show full bash and command outputs (default: `false`) | `true` |\n##\n[​\n](#tools-available-to-claude)\nTools available to Claude\nClaude Code has access to a set of powerful tools that help it understand and modify your codebase:\n| Tool | Description | Permission Required |\n| --- | --- | --- |\n| **Bash** | Executes shell commands in your environment | Yes |\n| **Edit** | Makes targeted edits to specific files | Yes |\n| **Glob** | Finds files based on pattern matching | No |\n| **Grep** | Searches for patterns in file contents | No |\n| **LS** | Lists files and directories | No |\n| **MultiEdit** | Performs multiple edits on a single file atomically | Yes |\n| **NotebookEdit** | Modifies Jupyter notebook cells | Yes |\n| **NotebookRead** | Reads and displays Jupyter notebook contents | No |\n| **Read** | Reads the contents of files | No |\n| **Task** | Runs a sub-agent to handle complex, multi-step tasks | No |\n| **TodoWrite** | Creates and manages structured task lists | No |\n| **WebFetch** | Fetches content from a specified URL | Yes |\n| **WebSearch** | Performs web searches with domain filtering | Yes |\n| **Write** | Creates or overwrites files | Yes |\nPermission rules can be configured using `/allowed-tools` or in [permission settings](https://docs.anthropic.com/en/docs/claude-code/settings#available-settings).\n###\n[​\n](#extending-tools-with-hooks)\nExtending tools with hooks\nYou can run custom commands before or after any tool executes using [Claude Code hooks](https://docs.anthropic.com/en/docs/claude-code/hooks-guide).\nFor example, you could automatically run a Python formatter after Claude modifies Python files, or prevent modifications to production configuration files by blocking Write operations to certain paths.\n##\n[​\n](#see-also)\nSee also\n-   [Identity and Access Management](https://docs.anthropic.com/en/docs/claude-code/iam#configuring-permissions) - Learn about Claude Code’s permission system\n-   [IAM and access control](https://docs.anthropic.com/en/docs/claude-code/iam#enterprise-managed-policy-settings) - Enterprise policy management\n-   [Troubleshooting](https://docs.anthropic.com/en/docs/claude-code/troubleshooting#auto-updater-issues) - Solutions for common configuration issues\nWas this page helpful?\nYesNo\n[Analytics](https://docs.anthropic.com/en/docs/claude-code/analytics)[Add Claude Code to your IDE](https://docs.anthropic.com/en/docs/claude-code/ide-integrations)\n[x](https://x.com/AnthropicAI)[linkedin](https://www.linkedin.com/company/anthropicresearch)[discord](https://www.anthropic.com/discord)\nOn this page\n-   [Settings files](#settings-files)\n-   [Available settings](#available-settings)\n-   [Permission settings](#permission-settings)\n-   [Settings precedence](#settings-precedence)\n-   [Sub agent configuration](#sub-agent-configuration)\n-   [Environment variables](#environment-variables)\n-   [Configuration options](#configuration-options)\n-   [Global configuration](#global-configuration)\n-   [Tools available to Claude](#tools-available-to-claude)\n-   [Extending tools with hooks](#extending-tools-with-hooks)\n-   [See also](#see-also)",
  "timestamp": 1753484573937,
  "title": "Claude Code settings - Anthropic"
}