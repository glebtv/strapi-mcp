name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    # Clean up any existing Strapi instance
    - name: Clean up existing Strapi instance
      run: |
        pkill -f "strapi" || true
        pkill -f "node.*develop" || true
        sleep 2
        rm -rf strapi-test
    
    # Install dependencies FIRST
    - name: Install dependencies
      run: npm ci
    
    # Build MCP server BEFORE setup (needed by setup-strapi-test.sh)
    - name: Build MCP server
      run: npm run build
    
    # Setup Strapi test instance
    - name: Setup Strapi test instance
      run: ./scripts/setup-strapi-test.sh
    
    # Load test environment variables
    - name: Load test environment
      run: |
        if [ ! -f .env.test ]; then
          echo "❌ .env.test not found!"
          exit 1
        fi
        echo "✅ Loading credentials from .env.test"
        # Export variables to GitHub Actions environment
        while IFS= read -r line; do
          if [[ ! "$line" =~ ^# ]] && [[ -n "$line" ]]; then
            echo "$line" >> $GITHUB_ENV
          fi
        done < .env.test
    
    # Run tests with proper environment
    - name: Run tests
      run: |
        # Clear token cache before run to ensure clean state
        rm -f .test-tokens.json
        
        # Run tests with random seed (like local script)
        npm test -- --run --sequence.shuffle
      env:
        NODE_ENV: test
        VITEST: true
    
    # Run linter
    - name: Run linter
      run: npm run lint
    
    # Run type check
    - name: Run type check
      run: npm run typecheck
    
    # Upload test artifacts (always, not just on failure)
    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts-${{ matrix.node-version }}
        path: |
          strapi-test/strapi_output.log
          ci_*.log
          .test-tokens.json
        retention-days: 7
    
    # Stop Strapi
    - name: Stop Strapi
      if: always()
      run: |
        # Save Strapi logs before stopping
        if [ -f strapi-test/strapi_output.log ]; then
          echo "📄 Saving Strapi logs..."
          cp strapi-test/strapi_output.log ci_strapi_last_run.log
        fi
        
        # Try to find and kill Strapi process
        STRAPI_PID=$(ps aux | grep "npm run develop" | grep -v grep | awk '{print $2}' | head -1)
        if [ ! -z "$STRAPI_PID" ]; then
          echo "Killing Strapi process: $STRAPI_PID"
          kill $STRAPI_PID || true
          # Also kill any child processes
          pkill -P $STRAPI_PID || true
        fi
        
        # Additional cleanup
        pkill -f "strapi" || true
        sleep 1
