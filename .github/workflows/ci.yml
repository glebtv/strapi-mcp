name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Setup Strapi test instance
      run: ./scripts/setup-strapi-test.sh
    
    - name: Debug - Check Strapi status
      if: always()
      run: |
        echo "=== Checking Strapi process ==="
        ps aux | grep -E "(strapi|node.*develop)" | grep -v grep || echo "No Strapi processes found"
        echo "=== Strapi logs (last 50 lines) ==="
        if [ -f strapi-test/strapi_output.log ]; then
          tail -50 strapi-test/strapi_output.log || true
        else
          echo "strapi_output.log not found"
        fi
        echo "=== Checking health endpoint ==="
        curl -s http://localhost:1337/_health || echo "Failed to connect"
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build MCP server
      run: npm run build
    
    - name: Run tests
      run: |
        # Load static test credentials from .env.test
        export $(grep -v '^#' .env.test | xargs)
        echo "‚úÖ Loaded credentials from .env.test"
        echo "STRAPI_URL=$STRAPI_URL"
        echo "STRAPI_ADMIN_EMAIL=$STRAPI_ADMIN_EMAIL"
        
        # Check Strapi is still running before tests
        echo "üîç Checking Strapi status before tests..."
        curl -s http://localhost:1337/_health && echo "‚úÖ Strapi health check passed" || echo "‚ö†Ô∏è  Strapi health check failed"
        ps aux | grep -E "(strapi|node.*start)" | grep -v grep && echo "‚úÖ Strapi process found" || echo "‚ö†Ô∏è  No Strapi processes found"
        
        # Run tests with timeout
        timeout 600 npm test || (echo "‚ùå Tests failed or timed out"; exit 1)
      env:
        STRAPI_URL: http://localhost:1337
        NODE_ENV: test
        VITEST: true
    
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: strapi-logs-${{ matrix.node-version }}
        path: |
          strapi-test/strapi_output.log
          strapi-test/.tmp/data.db
        retention-days: 7
    
    - name: Stop Strapi
      if: always()
      run: |
        # Try environment variable first
        if [ ! -z "$STRAPI_PID" ]; then
          echo "Stopping Strapi process: $STRAPI_PID"
          kill $STRAPI_PID || true
        fi
        
        # Also check PID file
        if [ -f strapi-test/strapi.pid ]; then
          PID=$(cat strapi-test/strapi.pid)
          echo "Stopping Strapi from PID file: $PID"
          kill $PID || true
        fi
        
        # Final cleanup - be specific to avoid killing other processes
        pkill -f "strapi develop" || true
        pkill -f "npm run develop" || true
